

plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'org.flywaydb.flyway' version '6.5.7'

}

group = 'com.media'
version = '0.0.1-SNAPSHOT'


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-elasticsearch
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-elasticsearch', version: '3.4.2'

	implementation 'com.github.kokorin.jaffree:jaffree:2023.09.10'

	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	//implementation 'javax.xml.bind:jaxb-api:2.3.0'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	//developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	annotationProcessor 'org.projectlombok:lombok'
	implementation group: 'com.mysql', name: 'mysql-connector-j'
	//implementation 'org.imgscalr:imgscalr-lib:4.2'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	implementation 'org.jcodec:jcodec:0.2.5'
	implementation 'org.jcodec:jcodec-javase:0.2.5'


	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'com.github.ben-manes.caffeine:caffeine'


	implementation "org.flywaydb:flyway-mysql"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:mysql'
	testImplementation 'org.testcontainers:junit-jupiter'

}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}
flyway {
	url = 'jdbc:mysql://localhost:3309/share_image'
	user = 'root'
	password = '0000'
	// Optionally, specify the location of migration files
	locations = ['filesystem:src/main/resources/db/migration']
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

test {
	jvmArgs = []
}